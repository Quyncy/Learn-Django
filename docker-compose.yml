version: "3.9"

services:
  app:  # app kommuniziert mit der Datenbank
    build:
      context: .
      args:
        - DEV=true
    ports:
    - "8000:8000"
    volumes:
    - ./app:/app
    command: >  # erstmal auf db warten und später server aufrufen. running migration
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
    depends_on:
      - db  # app ist von der db abhängig, dh. ruft auf und wartet auf datenbank db

  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data  # ort, wo volumes im container gespeichert wird
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme

volumes:  # volumes ist der Ort, wo man beständige Daten speichert
  dev-db-data:
